<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".g.cs" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="../Templates/CefGlue.ttinclude" #>
<#
    var structDefs = new StructDef[] {
        new StructDef("cef_settings_t",          hasBase:false, hasSize:true,  hasClear:true),
        new StructDef("cef_window_info_t",       hasBase:false, hasSize:false, hasClear:true),
        new StructDef("cef_browser_settings_t",  hasBase:false, hasSize:true,  hasClear:false), // FIXME: hasClear
        new StructDef("cef_popup_features_t",    hasBase:false, hasSize:false, hasClear:false),
        new StructDef("cef_cookie_t",            hasBase:false, hasSize:false, hasClear:true),
        new StructDef("cef_geoposition_t",       hasBase:false, hasSize:false, hasClear:true),

        new StructDef("cef_app_t",               hasBase:true),
        new StructDef("cef_client_t",            hasBase:true),
        new StructDef("cef_life_span_handler_t", hasBase:true),
        new StructDef("cef_load_handler_t",      hasBase:true),
        new StructDef("cef_request_handler_t",   hasBase:true),
        new StructDef("cef_display_handler_t",   hasBase:true),
        new StructDef("cef_focus_handler_t",     hasBase:true),
        new StructDef("cef_keyboard_handler_t",  hasBase:true),
        new StructDef("cef_menu_handler_t",      hasBase:true),
        new StructDef("cef_permission_handler_t",hasBase:true),
        new StructDef("cef_print_handler_t",     hasBase:true),
        new StructDef("cef_find_handler_t",      hasBase:true),
        new StructDef("cef_jsdialog_handler_t",  hasBase:true),
        new StructDef("cef_v8context_handler_t", hasBase:true),
        new StructDef("cef_render_handler_t",    hasBase:true),
        new StructDef("cef_proxy_handler_t",    hasBase:true),
        new StructDef("cef_drag_handler_t",      hasBase:true),
        new StructDef("cef_geolocation_handler_t",      hasBase:true),
        new StructDef("cef_zoom_handler_t",      hasBase:true),

        new StructDef("cef_download_handler_t",  hasBase:true),
        new StructDef("cef_resource_bundle_handler_t",  hasBase:true),

        new StructDef("cef_scheme_handler_factory_t",  hasBase:true),
        new StructDef("cef_scheme_handler_t",          hasBase:true),

        new StructDef("cef_content_filter_t",    hasBase:true),

        new StructDef("cef_task_t",              hasBase:true),

        new StructDef("cef_cookie_visitor_t",    hasBase:true),

        new StructDef("cef_v8handler_t",         hasBase:true),
        new StructDef("cef_v8accessor_t",        hasBase:true),

        new StructDef("cef_domvisitor_t",        hasBase:true),
        new StructDef("cef_domevent_listener_t", hasBase:true),

        new StructDef("cef_read_handler_t",      hasBase:true),
        new StructDef("cef_write_handler_t",     hasBase:true),

        new StructDef("cef_web_urlrequest_client_t", hasBase:true),

        new StructDef("cefglue_userdata_t",      hasBase:true),
    };
#>
namespace CefGlue.Interop
{
    using System;
    using System.Runtime.InteropServices;

<#
    foreach(var def in structDefs)
    {
#>
    internal unsafe partial struct <#=def.Name#>
    {
        private static int s_size;

        static <#=def.Name#>()
        {
            s_size = Marshal.SizeOf(typeof(<#=def.Name#>));
        }

        internal static <#=def.Name#>* Alloc()
        {
            var ptr = (<#=def.Name#>*)Marshal.AllocHGlobal(s_size);
            *ptr = new <#=def.Name#>();
<# if (def.HasBase) { #>
            ptr->@base.size = s_size;
<# } else if (def.HasSize) { #>
            ptr->size = s_size;
<# } #>
            return ptr;
        }

        internal static void Free(<#=def.Name#>* ptr)
        {
<# if (def.HasClear) { #>
            Clear(ptr);
<# } #>
            Marshal.FreeHGlobal((IntPtr)ptr);
        }
    }

<#
    }
#>
}
